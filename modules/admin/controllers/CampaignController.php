<?php

/**
 * Campaign.
 * 
 * Generated by Gii. Modified.
 * 
 * @author Gemblue
 */

namespace app\modules\admin\controllers;

use Yii;
use app\models\Campaign;
use app\models\CampaignSearch;
use app\models\Labels;
use app\models\CampaignLabels;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * CampaignController implements the CRUD actions for Campaign model.
 */
class CampaignController extends Controller
{
    /**
     * Define behavior.
     * 
     * @return array
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all Campaign models.
     * 
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new CampaignSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);
        
        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single Campaign model.
     * 
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Campaign model.
     * 
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $campaign = new Campaign();
        $campaignLabels = new CampaignLabels();
        
        if ($request = Yii::$app->request->post()) 
        {
            /** 1. Insert master campaign */
            $campaign->user_id = 1;
            $campaign->title = $request['Campaign']['title'];
            $campaign->content = $request['Campaign']['content'];
            $campaign->target_amount = $request['Campaign']['target_amount'];
            
            if ($campaign->save()) {

                /** 2. Connect to label */
                try {
                    $campaignLabels->saveConnect($campaign->id, $request['labels']);
                } catch (Exception $e) {
                    echo $e->getMessage();
                }

                return $this->redirect(['view', 'id' => $campaign->id]);
            }
        }

        return $this->render('create', [
            'model' => $campaign,
        ]);
    }

    /**
     * Updates an existing Campaign model.
     * 
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($request = Yii::$app->request->post()) 
        {
            
            
            Labels::saveToCampaign($request['labels']);
            exit;

            /** Insert main data */
            $model->title = $request['Campaign']['title'];
            $model->content = $request['Campaign']['content'];
            $model->target_amount = $request['Campaign']['target_amount'];
            
            if ($model->save()) {

                /** Then insert labels. */
                Labels::saveToCampaign($request['labels']);
                exit;

                return $this->redirect(['view', 'id' => $model->id]);
            }
        }

        return $this->render('update', [
            'model' => $model,
        ]);
    }

    /**
     * Deletes an existing Campaign model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the Campaign model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Campaign the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Campaign::findOne($id)) !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }
}
