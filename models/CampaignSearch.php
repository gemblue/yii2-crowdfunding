<?php

/**
 * Campaign Search.
 * 
 * Generated by Gii. Modified.
 * 
 * @author Gemblue
 */

namespace app\models;

use yii\base\Model;
use yii\data\ActiveDataProvider;
use app\models\Campaign;

/**
 * CampaignSearch represents the model behind the search form of `app\models\Campaign`.
 */
class CampaignSearch extends Campaign
{
    /**
     * Define table name.
     * 
     * @return string
     */
    public static function tableName()
    {
        return 'campaign';
    }

    /**
     * Define rules
     * 
     * @return array
     */
    public function rules()
    {
        return [
            [['id', 'user_id', 'target_amount'], 'integer'],
            [['title', 'content', 'created_at', 'updated_at'], 'safe'],
        ];
    }

    /**
     * Define scenarios
     * 
     * @return mixed
     */
    public function scenarios()
    {
        // Bypass scenarios() implementation in the parent class
        return Model::scenarios();
    }

    /**
     * Define custom search method.
     *
     * Output activeDataProvider for widgets.
     * 
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $query = Campaign::find()->with(['user', 'labels']);
        
        // Conditions that should always apply here
        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);

        $this->load($params);
        
        if (!$this->validate()) {
            // Uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
            return $dataProvider;
        }

        // Grid filtering conditions
        $query->andFilterWhere([
            'id' => $this->id,
            'user_id' => $this->user_id,
            'target_amount' => $this->target_amount,
            'created_at' => $this->created_at,
            'updated_at' => $this->updated_at,
        ]);
        
        $query->andFilterWhere(['like', 'title', $this->title])->andFilterWhere(['like', 'content', $this->content]);
        
        return $dataProvider;
    }
}